/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PostsAuthenticatedImport } from './routes/posts/_authenticated'
import { Route as PostsAuthenticatedPostIdLayoutImport } from './routes/posts/_authenticated/$postId/_layout'

// Create Virtual Routes

const PostsImport = createFileRoute('/posts')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const PostsIndexLazyImport = createFileRoute('/posts/')()
const PostsAuthenticatedPostIdImport = createFileRoute(
  '/posts/_authenticated/$postId',
)()
const PostsAuthenticatedPostIdLayoutIndexLazyImport = createFileRoute(
  '/posts/_authenticated/$postId/_layout/',
)()
const PostsAuthenticatedPostIdLayoutCommentsCommentIdLazyImport =
  createFileRoute('/posts/_authenticated/$postId/_layout/comments/$commentId')()

// Create/Update Routes

const PostsRoute = PostsImport.update({
  path: '/posts',
  getParentRoute: () => rootRoute,
} as any)

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const PostsIndexLazyRoute = PostsIndexLazyImport.update({
  path: '/',
  getParentRoute: () => PostsRoute,
} as any).lazy(() => import('./routes/posts/index.lazy').then((d) => d.Route))

const PostsAuthenticatedRoute = PostsAuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => PostsRoute,
} as any)

const PostsAuthenticatedPostIdRoute = PostsAuthenticatedPostIdImport.update({
  path: '/$postId',
  getParentRoute: () => PostsAuthenticatedRoute,
} as any)

const PostsAuthenticatedPostIdLayoutRoute =
  PostsAuthenticatedPostIdLayoutImport.update({
    id: '/_layout',
    getParentRoute: () => PostsAuthenticatedPostIdRoute,
  } as any)

const PostsAuthenticatedPostIdLayoutIndexLazyRoute =
  PostsAuthenticatedPostIdLayoutIndexLazyImport.update({
    path: '/',
    getParentRoute: () => PostsAuthenticatedPostIdLayoutRoute,
  } as any).lazy(() =>
    import('./routes/posts/_authenticated/$postId/_layout/index.lazy').then(
      (d) => d.Route,
    ),
  )

const PostsAuthenticatedPostIdLayoutCommentsCommentIdLazyRoute =
  PostsAuthenticatedPostIdLayoutCommentsCommentIdLazyImport.update({
    path: '/comments/$commentId',
    getParentRoute: () => PostsAuthenticatedPostIdLayoutRoute,
  } as any).lazy(() =>
    import(
      './routes/posts/_authenticated/$postId/_layout/comments.$commentId.lazy'
    ).then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/posts': {
      preLoaderRoute: typeof PostsImport
      parentRoute: typeof rootRoute
    }
    '/posts/_authenticated': {
      preLoaderRoute: typeof PostsAuthenticatedImport
      parentRoute: typeof PostsRoute
    }
    '/posts/': {
      preLoaderRoute: typeof PostsIndexLazyImport
      parentRoute: typeof PostsImport
    }
    '/posts/_authenticated/$postId': {
      preLoaderRoute: typeof PostsAuthenticatedPostIdImport
      parentRoute: typeof PostsAuthenticatedImport
    }
    '/posts/_authenticated/$postId/_layout': {
      preLoaderRoute: typeof PostsAuthenticatedPostIdLayoutImport
      parentRoute: typeof PostsAuthenticatedPostIdRoute
    }
    '/posts/_authenticated/$postId/_layout/': {
      preLoaderRoute: typeof PostsAuthenticatedPostIdLayoutIndexLazyImport
      parentRoute: typeof PostsAuthenticatedPostIdLayoutImport
    }
    '/posts/_authenticated/$postId/_layout/comments/$commentId': {
      preLoaderRoute: typeof PostsAuthenticatedPostIdLayoutCommentsCommentIdLazyImport
      parentRoute: typeof PostsAuthenticatedPostIdLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  AboutLazyRoute,
  PostsRoute.addChildren([
    PostsAuthenticatedRoute.addChildren([
      PostsAuthenticatedPostIdRoute.addChildren([
        PostsAuthenticatedPostIdLayoutRoute.addChildren([
          PostsAuthenticatedPostIdLayoutIndexLazyRoute,
          PostsAuthenticatedPostIdLayoutCommentsCommentIdLazyRoute,
        ]),
      ]),
    ]),
    PostsIndexLazyRoute,
  ]),
])

/* prettier-ignore-end */
